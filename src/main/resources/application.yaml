spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 数据源连接池配置
    druid:
      username: xxx
      driver-class-name: com.mysql.cj.jdbc.Driver
      password: xxx@2022
      url: jdbc:mysql://localhost:3306/dsrs_project?characterEncoding=utf8&allowPublicKeyRetrieval=true&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true
      #   数据源其他配置
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.logSlowSql=true;druid.stat.slowSqlMillis=1000;
#      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#      filters: stat,wall,slf4j
#
#      #配置监控属性： 在druid-starter的： com.alibaba.druid.spring.boot.autoconfigure.stat包下进行的逻辑配置
#      # WebStatFilter配置，
#      web-stat-filter:
#        #默认为false，表示不使用WebStatFilter配置，就是属性名去短线
#        enabled: true
#        #拦截该项目下的一切请求
#        url-pattern: /*
#        #对这些请求放行
#        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
#        session-stat-enable: true
#        principal-session-name: session_name
#        principal-cookie-name: cookie_name
#      # StatViewServlet配置
#      stat-view-servlet:
#        #默认为false，表示不使用StatViewServlet配置，就是属性名去短线
#        enabled: true
#        #配置DruidStatViewServlet的访问地址。后台监控页面的访问地址
#        url-pattern: /druid/*
#        #禁用HTML页面上的“重置”功能，会把所有监控的数据全部清空，一般不使用
#        reset-enable: false
#        #监控页面登录的用户名
#        login-username: admin
#        #监控页面登录的密码
#        login-password: 123456
#        #白名单
#        allow:
#        #黑名单
#        deny:
#      #Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
#      aop-patterns: com.zzp.*
#      spring:
#  # 数据源配置
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      username: yuanhh
#      password: Yuanhh@2022
#      url: jdbc:mysql://121.36.167.167:3306/dsrs_project?characterEncoding=utf8&allowPublicKeyRetrieval=true&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true
##  hikari:
##    # 等待连接池分配连接的最大时间（毫秒），超过这个时长还没有可用的连接，则会抛出SQLException
##    connection-timeout: 30000
##    # 最小连接数
##    minimum-idle: 5
##    # 最大连接数
##    maximum-pool-size: 20
##    # 自动提交
##    auto-commit: true
##    # 连接超时的最大时长（毫秒），超时则会被释放（retired）
##    idle-timeout: 600000
##    # 连接池的名字
##    pool-name: DataSourceHikariCP
##    # 连接池的最大生命时长（毫秒），超时则会被释放（retired）
##    max-lifetime: 18000000
#  # activiti7配置
#  activiti:
#    # 自动部署验证设置：true-开启（默认）、false-关闭
#    check-process-definitions: false
#    # 保存历史数据
#    history-level: full
#    # 检测历史表是否存在
#    db-history-used: true
#    # 关闭自动部署
#    deployment-mode: never-fail
#    # 对数据库中所有表进行更新操作，如果表不存在，则自动创建
#    # create_drop：启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）
#    # drop-create：启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）
#    database-schema-update: true
#    # 解决频繁查询SQL问题
#    async-executor-activate: false
